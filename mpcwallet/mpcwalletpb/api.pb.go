// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: mpcwalletpb/api.proto

package mpcwalletpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetWalletRequest) Reset() {
	*x = GetWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletRequest) ProtoMessage() {}

func (x *GetWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletRequest.ProtoReflect.Descriptor instead.
func (*GetWalletRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetWalletRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GetWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId         string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PartialPubKey string `protobuf:"bytes,2,opt,name=partial_pub_key,json=partialPubKey,proto3" json:"partial_pub_key,omitempty"`
	PublicKey     string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetWalletResponse) Reset() {
	*x = GetWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletResponse) ProtoMessage() {}

func (x *GetWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletResponse.ProtoReflect.Descriptor instead.
func (*GetWalletResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetWalletResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GetWalletResponse) GetPartialPubKey() string {
	if x != nil {
		return x.PartialPubKey
	}
	return ""
}

func (x *GetWalletResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type GenerateKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyPairRequest) Reset() {
	*x = GenerateKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairRequest) ProtoMessage() {}

func (x *GenerateKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{4}
}

type GenerateKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GenerateKeyPairResponse) Reset() {
	*x = GenerateKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairResponse) ProtoMessage() {}

func (x *GenerateKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateKeyPairResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GeneratePartialKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GeneratePartialKeyRequest) Reset() {
	*x = GeneratePartialKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePartialKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePartialKeyRequest) ProtoMessage() {}

func (x *GeneratePartialKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePartialKeyRequest.ProtoReflect.Descriptor instead.
func (*GeneratePartialKeyRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{6}
}

func (x *GeneratePartialKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GeneratePartialKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GeneratePartialKeyResponse) Reset() {
	*x = GeneratePartialKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePartialKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePartialKeyResponse) ProtoMessage() {}

func (x *GeneratePartialKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePartialKeyResponse.ProtoReflect.Descriptor instead.
func (*GeneratePartialKeyResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{7}
}

type ExchangePartialKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId      string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Commitment string `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
}

func (x *ExchangePartialKeyRequest) Reset() {
	*x = ExchangePartialKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangePartialKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangePartialKeyRequest) ProtoMessage() {}

func (x *ExchangePartialKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangePartialKeyRequest.ProtoReflect.Descriptor instead.
func (*ExchangePartialKeyRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{8}
}

func (x *ExchangePartialKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ExchangePartialKeyRequest) GetCommitment() string {
	if x != nil {
		return x.Commitment
	}
	return ""
}

type ExchangePartialKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ExchangePartialKeyResponse) Reset() {
	*x = ExchangePartialKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangePartialKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangePartialKeyResponse) ProtoMessage() {}

func (x *ExchangePartialKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangePartialKeyResponse.ProtoReflect.Descriptor instead.
func (*ExchangePartialKeyResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{9}
}

func (x *ExchangePartialKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ExchangePartialKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ProvePartialKeyCommitmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Proof string `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *ProvePartialKeyCommitmentRequest) Reset() {
	*x = ProvePartialKeyCommitmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvePartialKeyCommitmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvePartialKeyCommitmentRequest) ProtoMessage() {}

func (x *ProvePartialKeyCommitmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvePartialKeyCommitmentRequest.ProtoReflect.Descriptor instead.
func (*ProvePartialKeyCommitmentRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{10}
}

func (x *ProvePartialKeyCommitmentRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ProvePartialKeyCommitmentRequest) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

type ProvePartialKeyCommitmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId    string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ProvePartialKeyCommitmentResponse) Reset() {
	*x = ProvePartialKeyCommitmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvePartialKeyCommitmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvePartialKeyCommitmentResponse) ProtoMessage() {}

func (x *ProvePartialKeyCommitmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvePartialKeyCommitmentResponse.ProtoReflect.Descriptor instead.
func (*ProvePartialKeyCommitmentResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{11}
}

func (x *ProvePartialKeyCommitmentResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ProvePartialKeyCommitmentResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type ExchangeKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId      string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Commitment string `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
}

func (x *ExchangeKeyRequest) Reset() {
	*x = ExchangeKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeKeyRequest) ProtoMessage() {}

func (x *ExchangeKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeKeyRequest.ProtoReflect.Descriptor instead.
func (*ExchangeKeyRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{12}
}

func (x *ExchangeKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ExchangeKeyRequest) GetCommitment() string {
	if x != nil {
		return x.Commitment
	}
	return ""
}

type ExchangeKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ExchangeKeyResponse) Reset() {
	*x = ExchangeKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeKeyResponse) ProtoMessage() {}

func (x *ExchangeKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeKeyResponse.ProtoReflect.Descriptor instead.
func (*ExchangeKeyResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{13}
}

func (x *ExchangeKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ExchangeKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ProveKeyCommitmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Proof string `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *ProveKeyCommitmentRequest) Reset() {
	*x = ProveKeyCommitmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProveKeyCommitmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveKeyCommitmentRequest) ProtoMessage() {}

func (x *ProveKeyCommitmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveKeyCommitmentRequest.ProtoReflect.Descriptor instead.
func (*ProveKeyCommitmentRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{14}
}

func (x *ProveKeyCommitmentRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ProveKeyCommitmentRequest) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

type ProveKeyCommitmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId    string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ProveKeyCommitmentResponse) Reset() {
	*x = ProveKeyCommitmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProveKeyCommitmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveKeyCommitmentResponse) ProtoMessage() {}

func (x *ProveKeyCommitmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveKeyCommitmentResponse.ProtoReflect.Descriptor instead.
func (*ProveKeyCommitmentResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{15}
}

func (x *ProveKeyCommitmentResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ProveKeyCommitmentResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{16}
}

func (x *SignRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SigR  string `protobuf:"bytes,2,opt,name=sig_r,json=sigR,proto3" json:"sig_r,omitempty"`
	SigS  string `protobuf:"bytes,3,opt,name=sig_s,json=sigS,proto3" json:"sig_s,omitempty"`
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{17}
}

func (x *SignResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignResponse) GetSigR() string {
	if x != nil {
		return x.SigR
	}
	return ""
}

func (x *SignResponse) GetSigS() string {
	if x != nil {
		return x.SigS
	}
	return ""
}

type SignASN1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignASN1Request) Reset() {
	*x = SignASN1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignASN1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignASN1Request) ProtoMessage() {}

func (x *SignASN1Request) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignASN1Request.ProtoReflect.Descriptor instead.
func (*SignASN1Request) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{18}
}

func (x *SignASN1Request) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignASN1Request) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignASN1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignASN1Response) Reset() {
	*x = SignASN1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignASN1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignASN1Response) ProtoMessage() {}

func (x *SignASN1Response) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignASN1Response.ProtoReflect.Descriptor instead.
func (*SignASN1Response) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{19}
}

func (x *SignASN1Response) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignASN1Response) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SigR    string `protobuf:"bytes,3,opt,name=sig_r,json=sigR,proto3" json:"sig_r,omitempty"`
	SigS    string `protobuf:"bytes,4,opt,name=sig_s,json=sigS,proto3" json:"sig_s,omitempty"`
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *VerifyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyRequest) GetSigR() string {
	if x != nil {
		return x.SigR
	}
	return ""
}

func (x *VerifyRequest) GetSigS() string {
	if x != nil {
		return x.SigS
	}
	return ""
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId    string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{21}
}

func (x *VerifyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *VerifyResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type VerifyASN1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *VerifyASN1Request) Reset() {
	*x = VerifyASN1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyASN1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyASN1Request) ProtoMessage() {}

func (x *VerifyASN1Request) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyASN1Request.ProtoReflect.Descriptor instead.
func (*VerifyASN1Request) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyASN1Request) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *VerifyASN1Request) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyASN1Request) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type VerifyASN1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId    string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *VerifyASN1Response) Reset() {
	*x = VerifyASN1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyASN1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyASN1Response) ProtoMessage() {}

func (x *VerifyASN1Response) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyASN1Response.ProtoReflect.Descriptor instead.
func (*VerifyASN1Response) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyASN1Response) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *VerifyASN1Response) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type GenerateSignatureRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigId     string `protobuf:"bytes,1,opt,name=sig_id,json=sigId,proto3" json:"sig_id,omitempty"`
	KeyId     string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Partial_R string `protobuf:"bytes,3,opt,name=partial_R,json=partialR,proto3" json:"partial_R,omitempty"`
}

func (x *GenerateSignatureRRequest) Reset() {
	*x = GenerateSignatureRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSignatureRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSignatureRRequest) ProtoMessage() {}

func (x *GenerateSignatureRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSignatureRRequest.ProtoReflect.Descriptor instead.
func (*GenerateSignatureRRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{24}
}

func (x *GenerateSignatureRRequest) GetSigId() string {
	if x != nil {
		return x.SigId
	}
	return ""
}

func (x *GenerateSignatureRRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GenerateSignatureRRequest) GetPartial_R() string {
	if x != nil {
		return x.Partial_R
	}
	return ""
}

type GenerateSignatureRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigId string `protobuf:"bytes,1,opt,name=sig_id,json=sigId,proto3" json:"sig_id,omitempty"`
	KeyId string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	R     string `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *GenerateSignatureRResponse) Reset() {
	*x = GenerateSignatureRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSignatureRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSignatureRResponse) ProtoMessage() {}

func (x *GenerateSignatureRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSignatureRResponse.ProtoReflect.Descriptor instead.
func (*GenerateSignatureRResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{25}
}

func (x *GenerateSignatureRResponse) GetSigId() string {
	if x != nil {
		return x.SigId
	}
	return ""
}

func (x *GenerateSignatureRResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GenerateSignatureRResponse) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

type GeneratePartialSignatureSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigId            string `protobuf:"bytes,1,opt,name=sig_id,json=sigId,proto3" json:"sig_id,omitempty"`
	KeyId            string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	EncryptedPrivKey string `protobuf:"bytes,3,opt,name=encrypted_priv_key,json=encryptedPrivKey,proto3" json:"encrypted_priv_key,omitempty"`
	PaillierPk       string `protobuf:"bytes,4,opt,name=paillier_pk,json=paillierPk,proto3" json:"paillier_pk,omitempty"`
	Digest           string `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *GeneratePartialSignatureSRequest) Reset() {
	*x = GeneratePartialSignatureSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePartialSignatureSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePartialSignatureSRequest) ProtoMessage() {}

func (x *GeneratePartialSignatureSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePartialSignatureSRequest.ProtoReflect.Descriptor instead.
func (*GeneratePartialSignatureSRequest) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{26}
}

func (x *GeneratePartialSignatureSRequest) GetSigId() string {
	if x != nil {
		return x.SigId
	}
	return ""
}

func (x *GeneratePartialSignatureSRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GeneratePartialSignatureSRequest) GetEncryptedPrivKey() string {
	if x != nil {
		return x.EncryptedPrivKey
	}
	return ""
}

func (x *GeneratePartialSignatureSRequest) GetPaillierPk() string {
	if x != nil {
		return x.PaillierPk
	}
	return ""
}

func (x *GeneratePartialSignatureSRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type GeneratePartialSignatureSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigId string `protobuf:"bytes,1,opt,name=sig_id,json=sigId,proto3" json:"sig_id,omitempty"`
	KeyId string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	S     string `protobuf:"bytes,3,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *GeneratePartialSignatureSResponse) Reset() {
	*x = GeneratePartialSignatureSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpcwalletpb_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePartialSignatureSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePartialSignatureSResponse) ProtoMessage() {}

func (x *GeneratePartialSignatureSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpcwalletpb_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePartialSignatureSResponse.ProtoReflect.Descriptor instead.
func (*GeneratePartialSignatureSResponse) Descriptor() ([]byte, []int) {
	return file_mpcwalletpb_api_proto_rawDescGZIP(), []int{27}
}

func (x *GeneratePartialSignatureSResponse) GetSigId() string {
	if x != nil {
		return x.SigId
	}
	return ""
}

func (x *GeneratePartialSignatureSResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GeneratePartialSignatureSResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

var File_mpcwalletpb_api_proto protoreflect.FileDescriptor

var file_mpcwalletpb_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x70, 0x62, 0x22, 0x14, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x30, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x19, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x1a, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a,
	0x20, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x56,
	0x0a, 0x21, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x48, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x4f, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x0b, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x0c, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x5f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x52, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x5f, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x53, 0x22, 0x42, 0x0a, 0x0f,
	0x53, 0x69, 0x67, 0x6e, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x47, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6a, 0x0a, 0x0d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x73,
	0x69, 0x67, 0x5f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x52,
	0x12, 0x13, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x53, 0x22, 0x43, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x62, 0x0a, 0x11, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x47,
	0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x66, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x52, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x22,
	0x58, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x69, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x69, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x21, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x67, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x73, 0x32, 0xa2, 0x0a, 0x0a, 0x0a, 0x4d, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70,
	0x62, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x2e, 0x6d, 0x70,
	0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x12, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d,
	0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x76, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x26, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x2e, 0x6d, 0x70, 0x63,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x53, 0x4e, 0x31, 0x12, 0x1c, 0x2e,
	0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x70,
	0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x53,
	0x4e, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x53, 0x4e, 0x31, 0x12,
	0x1e, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x53, 0x4e, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x12, 0x26, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x12, 0x2d, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x93, 0x01, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x42, 0x08, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6e, 0x61, 0x6d, 0x7a, 0x69, 0x61, 0x6e, 0x2f, 0x79,
	0x65, 0x68, 0x75, 0x64, 0x61, 0x2d, 0x6d, 0x70, 0x63, 0x2f, 0x6d, 0x70, 0x63, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x70,
	0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0xca, 0x02, 0x0b, 0x4d, 0x70, 0x63, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0xe2, 0x02, 0x17, 0x4d, 0x70, 0x63, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0b, 0x4d, 0x70, 0x63, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mpcwalletpb_api_proto_rawDescOnce sync.Once
	file_mpcwalletpb_api_proto_rawDescData = file_mpcwalletpb_api_proto_rawDesc
)

func file_mpcwalletpb_api_proto_rawDescGZIP() []byte {
	file_mpcwalletpb_api_proto_rawDescOnce.Do(func() {
		file_mpcwalletpb_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpcwalletpb_api_proto_rawDescData)
	})
	return file_mpcwalletpb_api_proto_rawDescData
}

var file_mpcwalletpb_api_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_mpcwalletpb_api_proto_goTypes = []interface{}{
	(*HealthCheckRequest)(nil),                // 0: mpcwalletpb.HealthCheckRequest
	(*HealthCheckResponse)(nil),               // 1: mpcwalletpb.HealthCheckResponse
	(*GetWalletRequest)(nil),                  // 2: mpcwalletpb.GetWalletRequest
	(*GetWalletResponse)(nil),                 // 3: mpcwalletpb.GetWalletResponse
	(*GenerateKeyPairRequest)(nil),            // 4: mpcwalletpb.GenerateKeyPairRequest
	(*GenerateKeyPairResponse)(nil),           // 5: mpcwalletpb.GenerateKeyPairResponse
	(*GeneratePartialKeyRequest)(nil),         // 6: mpcwalletpb.GeneratePartialKeyRequest
	(*GeneratePartialKeyResponse)(nil),        // 7: mpcwalletpb.GeneratePartialKeyResponse
	(*ExchangePartialKeyRequest)(nil),         // 8: mpcwalletpb.ExchangePartialKeyRequest
	(*ExchangePartialKeyResponse)(nil),        // 9: mpcwalletpb.ExchangePartialKeyResponse
	(*ProvePartialKeyCommitmentRequest)(nil),  // 10: mpcwalletpb.ProvePartialKeyCommitmentRequest
	(*ProvePartialKeyCommitmentResponse)(nil), // 11: mpcwalletpb.ProvePartialKeyCommitmentResponse
	(*ExchangeKeyRequest)(nil),                // 12: mpcwalletpb.ExchangeKeyRequest
	(*ExchangeKeyResponse)(nil),               // 13: mpcwalletpb.ExchangeKeyResponse
	(*ProveKeyCommitmentRequest)(nil),         // 14: mpcwalletpb.ProveKeyCommitmentRequest
	(*ProveKeyCommitmentResponse)(nil),        // 15: mpcwalletpb.ProveKeyCommitmentResponse
	(*SignRequest)(nil),                       // 16: mpcwalletpb.SignRequest
	(*SignResponse)(nil),                      // 17: mpcwalletpb.SignResponse
	(*SignASN1Request)(nil),                   // 18: mpcwalletpb.SignASN1Request
	(*SignASN1Response)(nil),                  // 19: mpcwalletpb.SignASN1Response
	(*VerifyRequest)(nil),                     // 20: mpcwalletpb.VerifyRequest
	(*VerifyResponse)(nil),                    // 21: mpcwalletpb.VerifyResponse
	(*VerifyASN1Request)(nil),                 // 22: mpcwalletpb.VerifyASN1Request
	(*VerifyASN1Response)(nil),                // 23: mpcwalletpb.VerifyASN1Response
	(*GenerateSignatureRRequest)(nil),         // 24: mpcwalletpb.GenerateSignatureRRequest
	(*GenerateSignatureRResponse)(nil),        // 25: mpcwalletpb.GenerateSignatureRResponse
	(*GeneratePartialSignatureSRequest)(nil),  // 26: mpcwalletpb.GeneratePartialSignatureSRequest
	(*GeneratePartialSignatureSResponse)(nil), // 27: mpcwalletpb.GeneratePartialSignatureSResponse
}
var file_mpcwalletpb_api_proto_depIdxs = []int32{
	0,  // 0: mpcwalletpb.MPCService.HealthCheck:input_type -> mpcwalletpb.HealthCheckRequest
	2,  // 1: mpcwalletpb.MPCService.GetWallet:input_type -> mpcwalletpb.GetWalletRequest
	4,  // 2: mpcwalletpb.MPCService.GenerateKeyPair:input_type -> mpcwalletpb.GenerateKeyPairRequest
	6,  // 3: mpcwalletpb.MPCService.GeneratePartialKey:input_type -> mpcwalletpb.GeneratePartialKeyRequest
	8,  // 4: mpcwalletpb.MPCService.ExchangePartialKey:input_type -> mpcwalletpb.ExchangePartialKeyRequest
	10, // 5: mpcwalletpb.MPCService.ProvePartialKeyCommitment:input_type -> mpcwalletpb.ProvePartialKeyCommitmentRequest
	12, // 6: mpcwalletpb.MPCService.ExchangeKey:input_type -> mpcwalletpb.ExchangeKeyRequest
	14, // 7: mpcwalletpb.MPCService.ProveKeyCommitment:input_type -> mpcwalletpb.ProveKeyCommitmentRequest
	16, // 8: mpcwalletpb.MPCService.Sign:input_type -> mpcwalletpb.SignRequest
	18, // 9: mpcwalletpb.MPCService.SignASN1:input_type -> mpcwalletpb.SignASN1Request
	20, // 10: mpcwalletpb.MPCService.Verify:input_type -> mpcwalletpb.VerifyRequest
	22, // 11: mpcwalletpb.MPCService.VerifyASN1:input_type -> mpcwalletpb.VerifyASN1Request
	24, // 12: mpcwalletpb.MPCService.GenerateSignatureR:input_type -> mpcwalletpb.GenerateSignatureRRequest
	26, // 13: mpcwalletpb.MPCService.GeneratePartialSignatureS:input_type -> mpcwalletpb.GeneratePartialSignatureSRequest
	1,  // 14: mpcwalletpb.MPCService.HealthCheck:output_type -> mpcwalletpb.HealthCheckResponse
	3,  // 15: mpcwalletpb.MPCService.GetWallet:output_type -> mpcwalletpb.GetWalletResponse
	5,  // 16: mpcwalletpb.MPCService.GenerateKeyPair:output_type -> mpcwalletpb.GenerateKeyPairResponse
	7,  // 17: mpcwalletpb.MPCService.GeneratePartialKey:output_type -> mpcwalletpb.GeneratePartialKeyResponse
	9,  // 18: mpcwalletpb.MPCService.ExchangePartialKey:output_type -> mpcwalletpb.ExchangePartialKeyResponse
	11, // 19: mpcwalletpb.MPCService.ProvePartialKeyCommitment:output_type -> mpcwalletpb.ProvePartialKeyCommitmentResponse
	13, // 20: mpcwalletpb.MPCService.ExchangeKey:output_type -> mpcwalletpb.ExchangeKeyResponse
	15, // 21: mpcwalletpb.MPCService.ProveKeyCommitment:output_type -> mpcwalletpb.ProveKeyCommitmentResponse
	17, // 22: mpcwalletpb.MPCService.Sign:output_type -> mpcwalletpb.SignResponse
	19, // 23: mpcwalletpb.MPCService.SignASN1:output_type -> mpcwalletpb.SignASN1Response
	21, // 24: mpcwalletpb.MPCService.Verify:output_type -> mpcwalletpb.VerifyResponse
	23, // 25: mpcwalletpb.MPCService.VerifyASN1:output_type -> mpcwalletpb.VerifyASN1Response
	25, // 26: mpcwalletpb.MPCService.GenerateSignatureR:output_type -> mpcwalletpb.GenerateSignatureRResponse
	27, // 27: mpcwalletpb.MPCService.GeneratePartialSignatureS:output_type -> mpcwalletpb.GeneratePartialSignatureSResponse
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_mpcwalletpb_api_proto_init() }
func file_mpcwalletpb_api_proto_init() {
	if File_mpcwalletpb_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mpcwalletpb_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePartialKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePartialKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangePartialKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangePartialKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvePartialKeyCommitmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvePartialKeyCommitmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProveKeyCommitmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProveKeyCommitmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignASN1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignASN1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyASN1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyASN1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSignatureRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSignatureRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePartialSignatureSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpcwalletpb_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePartialSignatureSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpcwalletpb_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mpcwalletpb_api_proto_goTypes,
		DependencyIndexes: file_mpcwalletpb_api_proto_depIdxs,
		MessageInfos:      file_mpcwalletpb_api_proto_msgTypes,
	}.Build()
	File_mpcwalletpb_api_proto = out.File
	file_mpcwalletpb_api_proto_rawDesc = nil
	file_mpcwalletpb_api_proto_goTypes = nil
	file_mpcwalletpb_api_proto_depIdxs = nil
}
