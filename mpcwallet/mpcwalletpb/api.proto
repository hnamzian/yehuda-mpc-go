syntax = "proto3";

package mpcservice;

service MPCService {
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
    rpc GetWallet(GetWalletRequest) returns (GetWalletResponse) {}
    rpc GenerateKeyPair(GenerateKeyPairRequest) returns (GenerateKeyPairResponse) {}
    rpc GeneratePartialKey(GeneratePartialKeyRequest) returns (GeneratePartialKeyResponse) {}
    rpc ExchangePartialKey(ExchangePartialKeyRequest) returns (ExchangePartialKeyResponse) {}
    rpc ProvePartialKeyCommitment(ProvePartialKeyCommitmentRequest) returns (ProvePartialKeyCommitmentResponse) {}
    rpc ExchangeKey(ExchangeKeyRequest) returns (ExchangeKeyResponse) {}
    rpc ProveKeyCommitment(ProveKeyCommitmentRequest) returns (ProveKeyCommitmentResponse) {}
    rpc Sign(SignRequest) returns (SignResponse) {}
    rpc SignASN1(SignASN1Request) returns (SignASN1Response) {}
    rpc Verify(VerifyRequest) returns (VerifyResponse) {}
    rpc VerifyASN1(VerifyASN1Request) returns (VerifyASN1Response) {}
    rpc GenerateSignatureR(GenerateSignatureRRequest) returns (GenerateSignatureRResponse) {}
    rpc GeneratePartialSignatureS(GeneratePartialSignatureSRequest) returns (GeneratePartialSignatureSResponse) {}
}

message HealthCheckRequest {}

message HealthCheckResponse {
    string status = 1;
}

message GetWalletRequest {
    string key_id = 1;
}

message GetWalletResponse {
    string key_id = 1;
    string partial_pub_key = 2;
    string public_key = 3;
}

message GenerateKeyPairRequest {}

message GenerateKeyPairResponse {
    string key_id = 1;
}

message GeneratePartialKeyRequest {
    string key_id = 1;
}

message GeneratePartialKeyResponse {}

message ExchangePartialKeyRequest {
    string key_id = 1;
    string commitment = 2;
}

message ExchangePartialKeyResponse {
    string key_id = 1;
    string public_key = 2;
}

message ProvePartialKeyCommitmentRequest {
    string key_id = 1;
    string proof = 2;
}

message ProvePartialKeyCommitmentResponse {
    string key_id = 1;
    bool verified = 2;
}

message ExchangeKeyRequest {
    string key_id = 1;
    string commitment = 2;
}

message ExchangeKeyResponse {
    string key_id = 1;
    string public_key = 2;
}

message ProveKeyCommitmentRequest {
    string key_id = 1;
    string proof = 2;
}

message ProveKeyCommitmentResponse {
    string key_id = 1;
    bool verified = 2;
}

message SignRequest {
    string key_id = 1;
    string message = 2;
}

message SignResponse {
    string key_id = 1;
    string sig_r = 2;
    string sig_s = 3;
}

message SignASN1Request {
    string key_id = 1;
    string message = 2;
}

message SignASN1Response {
    string key_id = 1;
    string signature = 2;
}

message VerifyRequest {
    string key_id = 1;
    string message = 2;
    string sig_r = 3;
    string sig_s = 4;
}

message VerifyResponse {
    string key_id = 1;
    bool verified = 2;
}

message VerifyASN1Request {
    string key_id = 1;
    string message = 2;
    string signature = 3;
}

message VerifyASN1Response {
    string key_id = 1;
    bool verified = 2;
}

message GenerateSignatureRRequest {
    string sig_id = 1;
    string key_id = 2;
    string partial_R = 3;
}

message GenerateSignatureRResponse {
    string sig_id = 1;
    string key_id = 2;
    string r = 3;
}

message GeneratePartialSignatureSRequest {
    string sig_id = 1;
    string key_id = 2;
    string encrypted_priv_key = 3;
    string paillier_pk = 4;
    string digest = 5;
}

message GeneratePartialSignatureSResponse {
    string sig_id = 1;
    string key_id = 2;
    string s = 3;
}
